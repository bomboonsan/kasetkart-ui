generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Attachment {
  id           Int           @id @default(autoincrement())
  url          String        @db.VarChar(255)
  filename     String        @db.VarChar(255)
  mime         String        @db.VarChar(255)
  size         Int?
  projectId    Int?
  workId       Int?
  Project      Project?      @relation(fields: [projectId], references: [id], onUpdate: Restrict, map: "Attachment_ibfk_1")
  ResearchWork ResearchWork? @relation(fields: [workId], references: [id], onUpdate: Restrict, map: "Attachment_ibfk_2")

  @@index([projectId], map: "projectId")
  @@index([workId], map: "workId")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model BookDetail {
  workId       Int               @id
  kind         String?           @db.VarChar(255)
  titleTh      String            @db.Text
  titleEn      String?           @db.Text
  detail       String?           @db.Text
  level        BookDetail_level?
  occurredAt   DateTime?         @db.Date
  ResearchWork ResearchWork      @relation(fields: [workId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "BookDetail_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ConferenceDetail {
  workId                       Int                     @id
  titleTh                      String                  @db.Text
  titleEn                      String?                 @db.Text
  isEnvironmentallySustainable Boolean?
  journalName                  String?                 @db.VarChar(255)
  doi                          String?                 @db.VarChar(255)
  isbn                         String?                 @db.VarChar(255)
  durationStart                DateTime                @db.Date
  durationEnd                  DateTime                @db.Date
  cost                         Int?
  presentationWork             String?                 @db.VarChar(255)
  presentType                  String?                 @db.VarChar(255)
  articleType                  String?                 @db.VarChar(255)
  abstractTh                   String?                 @db.Text
  abstractEn                   String?                 @db.Text
  summary                      String?                 @db.Text
  keywords                     String?                 @db.Text
  level                        ConferenceDetail_level?
  countryCode                  String?                 @db.VarChar(255)
  state                        String?                 @db.VarChar(255)
  city                         String?                 @db.VarChar(255)
  fundName                     String?                 @db.VarChar(255)
  ResearchWork                 ResearchWork            @relation(fields: [workId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "ConferenceDetail_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Department {
  id   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(255)
  User User[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model FundingDetail {
  workId          Int          @id
  fullName        String       @db.VarChar(255)
  position        String       @db.VarChar(255)
  faculty         String       @db.VarChar(255)
  kind            String?      @db.VarChar(255)
  contentDesc     String?      @db.VarChar(255)
  priorWorks      String?      @db.VarChar(255)
  objectives      String?      @db.VarChar(255)
  targetAudience  String?      @db.VarChar(255)
  chaptersOutline String?      @db.Text
  approxPages     String?      @db.VarChar(255)
  approxTimeline  String?      @db.VarChar(255)
  bibliography    String?      @db.Text
  ResearchWork    ResearchWork @relation(fields: [workId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "FundingDetail_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Organization {
  id   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(255)
  User User[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Profile {
  id        Int     @id @default(autoincrement())
  firstName String? @db.VarChar(255)
  lastName  String? @db.VarChar(255)
  avatarUrl String? @db.VarChar(255)
  userUD    Int?
  User      User?   @relation(fields: [userUD], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "Profile_ibfk_1")

  @@index([userUD], map: "userUD")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Project {
  id                           Int              @id @default(autoincrement())
  fiscalYear                   Int
  projectType                  String           @db.VarChar(255)
  projectMode                  String           @db.VarChar(255)
  subProjectCount              Int?             @default(0)
  nameTh                       String           @db.Text
  nameEn                       String           @db.Text
  isEnvironmentallySustainable Boolean?
  durationStart                DateTime         @db.Date
  durationEnd                  DateTime         @db.Date
  researchKind                 String?          @db.VarChar(255)
  fundType                     String?          @db.VarChar(255)
  fundName                     String?          @db.VarChar(255)
  budget                       Int?
  keywords                     String?          @db.Text
  icTypes                      String?          @db.VarChar(255)
  impact                       String?          @db.VarChar(255)
  sdg                          String?          @db.VarChar(255)
  status                       Project_status?  @default(DRAFT)
  createdAt                    DateTime?        @default(now()) @db.DateTime(0)
  updatedAt                    DateTime?        @default(now()) @db.DateTime(0)
  Attachment                   Attachment[]
  ProjectPartner               ProjectPartner[]
  ResearchWork                 ResearchWork[]

  @@index([fiscalYear], map: "idx_project_fiscal_year")
  @@index([status], map: "idx_project_status")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ProjectPartner {
  id          Int      @id @default(autoincrement())
  projectId   Int?
  isInternal  Boolean?
  userID      Int?
  fullname    String?  @db.VarChar(255)
  orgName     String?  @db.VarChar(255)
  partnerType String?  @db.VarChar(255)
  proportion  Int?
  comment     String?  @db.VarChar(255)
  Project     Project? @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "ProjectPartner_ibfk_1")
  User        User?    @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ProjectPartner_ibfk_2")

  @@index([projectId], map: "projectId")
  @@index([userID], map: "userID")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model PublicationDetail {
  workId                       Int                      @id
  titleTh                      String                   @db.Text
  titleEn                      String?                  @db.Text
  isEnvironmentallySustainable Boolean?
  journalName                  String?                  @db.VarChar(255)
  doi                          String?                  @db.VarChar(255)
  issn                         String?                  @db.VarChar(255)
  issnYear                     String?                  @db.VarChar(255)
  issnIssue                    String?                  @db.VarChar(255)
  durationMonthStart           String                   @db.Text
  durationMonthEnd             String                   @db.Text
  durationYearStart            String                   @db.Text
  durationYearEnd              String                   @db.Text
  pageStart                    String?                  @db.VarChar(255)
  pageEnd                      String?                  @db.VarChar(255)
  level                        PublicationDetail_level?
  isJournalDatabase            Boolean?
  scopus                       Boolean?
  TCI1                         Boolean?
  TCI2                         Boolean?
  WebOfScience                 Boolean?
  WebOfScienceValue            String?                  @db.VarChar(255)
  ABDC                         Boolean?
  ABDCValue                    String?                  @db.VarChar(255)
  AJG                          Boolean?
  AJGValue                     String?                  @db.VarChar(255)
  SocialScienceResearchNetwork Boolean?
  fundType                     String?                  @db.Text
  fundName                     String?                  @db.VarChar(255)
  keywords                     String?                  @db.Text
  abstractTh                   String?                  @db.Text
  abstractEn                   String?                  @db.Text
  ResearchWork                 ResearchWork             @relation(fields: [workId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "PublicationDetail_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ReportSnapshot {
  id            Int       @id @default(autoincrement())
  at            DateTime? @default(now()) @db.DateTime(0)
  totalUsers    Int?
  totalApproved Int?
  totalProjects Int?
  totalWorks    Int?
  byType        String?   @db.LongText
  byStatus      String?   @db.LongText
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model ResearchWork {
  id                                  Int                  @id @default(autoincrement())
  projectId                           Int?
  type                                ResearchWork_type
  status                              ResearchWork_status? @default(DRAFT)
  createdById                         Int?
  updatedById                         Int?
  createdAt                           DateTime?            @default(now()) @db.DateTime(0)
  updatedAt                           DateTime?            @default(now()) @db.DateTime(0)
  Attachment                          Attachment[]
  BookDetail                          BookDetail?
  ConferenceDetail                    ConferenceDetail?
  FundingDetail                       FundingDetail?
  PublicationDetail                   PublicationDetail?
  Project                             Project?             @relation(fields: [projectId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "ResearchWork_ibfk_1")
  User_ResearchWork_createdByIdToUser User?                @relation("ResearchWork_createdByIdToUser", fields: [createdById], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ResearchWork_ibfk_2")
  User_ResearchWork_updatedByIdToUser User?                @relation("ResearchWork_updatedByIdToUser", fields: [updatedById], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "ResearchWork_ibfk_3")
  WorkAuthor                          WorkAuthor[]

  @@index([createdById], map: "createdById")
  @@index([createdAt], map: "idx_work_created_at")
  @@index([projectId], map: "idx_work_project_id")
  @@index([status], map: "idx_work_status")
  @@index([type], map: "idx_work_type")
  @@index([updatedById], map: "updatedById")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id                                          Int                  @id @default(autoincrement())
  email                                       String               @unique(map: "email") @db.VarChar(255)
  passwordHash                                String               @db.VarChar(255)
  role                                        User_role?           @default(USER)
  approvalStatus                              User_approvalStatus? @default(PENDING)
  departmentId                                Int?
  organizationID                              Int?
  createdAt                                   DateTime?            @default(now()) @db.DateTime(0)
  updatedAt                                   DateTime?            @default(now()) @db.DateTime(0)
  Profile                                     Profile[]
  ProjectPartner                              ProjectPartner[]
  ResearchWork_ResearchWork_createdByIdToUser ResearchWork[]       @relation("ResearchWork_createdByIdToUser")
  ResearchWork_ResearchWork_updatedByIdToUser ResearchWork[]       @relation("ResearchWork_updatedByIdToUser")
  Department                                  Department?          @relation(fields: [departmentId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "User_ibfk_1")
  Organization                                Organization?        @relation(fields: [organizationID], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "User_ibfk_2")
  WorkAuthor                                  WorkAuthor[]

  @@index([departmentId], map: "departmentId")
  @@index([approvalStatus], map: "idx_user_approval_status")
  @@index([email], map: "idx_user_email")
  @@index([organizationID], map: "organizationID")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model WorkAuthor {
  id              Int           @id @default(autoincrement())
  workId          Int?
  userId          Int?
  externalName    String?       @db.VarChar(255)
  isCorresponding Boolean?      @default(false)
  ResearchWork    ResearchWork? @relation(fields: [workId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "WorkAuthor_ibfk_1")
  User            User?         @relation(fields: [userId], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "WorkAuthor_ibfk_2")

  @@index([userId], map: "userId")
  @@index([workId], map: "workId")
}

enum ResearchWork_type {
  CONFERENCE
  PUBLICATION
  FUNDING
  BOOK
}

enum ResearchWork_status {
  DRAFT
  SUBMITTED
  ACCEPTED
  REJECTED
}

enum User_role {
  SUPERADMIN
  ADMIN
  USER
}

enum User_approvalStatus {
  PENDING
  APPROVED
  DISABLED
}

enum BookDetail_level {
  NATIONAL
  INTERNATIONAL
}

enum PublicationDetail_level {
  NATIONAL
  INTERNATIONAL
}

enum ConferenceDetail_level {
  NATIONAL
  INTERNATIONAL
}

enum Project_status {
  DRAFT
  SUBMITTED
  ACCEPTED
  REJECTED
}
